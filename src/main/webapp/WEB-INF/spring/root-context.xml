<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl"/>
		<property name="username" value="javauser"/>
		<property name="password" value="JAVA1234"/>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	<!--
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/Oracle11g"/>
	</bean>
	-->
	<!-- mybatis 셋팅
		sqlSessionFactory는 데이터베이스와의 연결과 SQL의 실행에 대한 모든 것을 가진 가장 중요한 객체이다.
		sqlSessionFactory를 생성해주는 객체를 설정해주어야하는데 sqlSessionFactoryBean 이라는 클래스를 생성한다.
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:query/*.xml"/>
		<!-- 이 mybatis의 설정을 전담하는 config.xml을 설정한다. -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
	</bean>

	<!-- 
	이렇게 설정하면 다양한 패키지에 대응할수가 없다.
	<mybatis-spring:scan base-package="com.spring.client.board.dao"/> -->
	<context:component-scan base-package="com.spring.sample"/>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"><value>com.spring.**.**.dao</value></property>
	</bean>
	
	<!-- 트랜잭션을 관리하는 빈(bean) 등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

	<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>
