<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.client.board.dao.BoardDao">

	<!-- <select id="boardList" resultType="com.spring.client.board.vo.BoardVO" 
		parameterType="com.spring.client.board.vo.BoardVO"> SELECT b_num, b_name, 
		b_title, to_char(b_date,'YYYY-MM-DD') as b_date, (SELECT COUNT(r_NUM) FROM 
		spring_reply WHERE b_NUM = B.b_NUM) AS r_cnt FROM spring_board b <if test="search=='b_title'"> 
		where b_title like '%'|| #{keyword} ||'%' </if> <if test="search == 'b_content'"> 
		where b_content like '%'|| #{keyword} ||'%' </if> <if test="search == 'b_name'"> 
		where b_name like '%'|| #{keyword} ||'%' </if> ORDER BY b_num desc </select> -->
		
		
	<!-- 자주 사용하는 부분만을 떼어내 sql태그안에 정의해준다. 다른 select문에서 호출하여 적용한다. -->
	<sql id="boardSearch">
		<if test="search=='b_title'">
				<![CDATA[b_title like '%'|| #{keyword} ||'%']]>
		</if>
		<if test="search == 'b_content'">
				<![CDATA[b_content like '%'|| #{keyword} ||'%']]>
		</if>
		<if test="search == 'b_name'">
				<![CDATA[b_name like '%'|| #{keyword} ||'%']]>
		</if>
	</sql>

	<select id="boardList" resultType="board" parameterType="board">
		<!-- <![CDATA[
		SELECT 
			b_num,b_name,b_title,to_char(b_date,'YYYY-MM-DD') as b_date, 
			(SELECT COUNT(r_num) FROM spring_reply WHERE b_num = boardlist.b_num) as r_cnt 
		FROM ( 
			SELECT /*+INDEX_DESC(spring_board spring_board_pk)*/
				rownum as rnum, b_num, b_name, b_title, b_date 
			FROM spring_board 
			WHERE ]]> -->
		<![CDATA[
		SELECT 
			b_num,b_name,b_title,to_char(b_date,'YYYY-MM-DD') as b_date, r_cnt 
		FROM ( 
			SELECT /*+INDEX_DESC(spring_board spring_board_pk)*/
				rownum as rnum, b_num, b_name, b_title, b_date ,r_cnt
			FROM spring_board 
			WHERE ]]>	
			
		<!-- 안에 조건이 만족되면 (b_title like '%'|| #{keyword}||'%') and 가 추가된다. trim 
			= 안에 if가 만족되면 앞부분과 뒷부분을 붙혀준다. prefix = 앞에 추가되는 구분 suffix = 뒤에 추가되는 구분 prefixOverrides 
			= 조건이 만족되지 않았을때 AND까지의 내용을 지우도록 명명 -->
		<trim prefix="(" suffix=") AND " prefixOverrides="AND">
			<include refid="boardSearch"></include>
		</trim>
		<![CDATA[ rownum <= #{pageNum} * #{amount}
		) boardlist
		WHERE rnum > (#{pageNum} - 1) * #{amount}]]>
	</select>

	<!-- 게시물 등록 1 -->
	<insert id="boardInsert" parameterType="board">
		<![CDATA[Insert into spring_board(b_num,b_name,b_title,b_content,b_pwd) 
		values(spring_board_seq.nextval,#{b_name},#{b_title},#{b_content},#{b_pwd})]]>
	</insert>

	<!-- 게시물 등록 2 selectKey 앞에 먼저 수행되는 내용 즉 검색후 인설트 할수 있음 -->
	<insert id="" parameterType="board">
		/* board - boardInsert */
		<selectKey keyProperty="b_num" resultType="int"
			order="BEFORE">
			select spring_board_seq.nextval from dual
		</selectKey>

		Insert into spring_board(b_num,b_name,b_title,b_content,b_pwd)
		values(#{b_num},#{b_name},#{b_title},#{b_content},#{b_pwd})
	</insert>

	<select id="boardDetail" parameterType="int" resultType="board">
		<![CDATA[SELECT b_num, b_name, b_title, b_content,to_char(b_date,'YYYY-MM-DD') as b_date 
		FROM spring_board where b_num = #{b_num}]]>
	</select>

	<select id="pwdConfirm" parameterType="board" resultType="int">
		SELECT
		NVL((SELECT 1 FROM spring_board WHERE b_num = #{b_num} and b_pwd =
		#{b_pwd}),0)
		as state from dual
	</select>

	<update id="boardUpdate" parameterType="board">
		/* board - boardUpdate */
		UPDATE spring_board SET
		b_title = #{b_title}
		,b_content = #{b_content}
		,b_date = sysdate
		<if test="b_pwd != ''">
			,b_pwd = #{b_pwd}
		</if>
		WHERE b_num = #{b_num}
	</update>

	<delete id="boardDelete" parameterType="board">
		DELETE FROM spring_board
		WHERE
		b_num = #{b_num}
	</delete>


	<!-- 검색된 레코드의 갯수를 반환받는다. -->
	<select id="boardListCnt" parameterType="board" resultType="int">
		select count(*) from spring_board
		<trim prefix=" where (" suffix=")">
			<include refid="boardSearch"></include>
		</trim>
	</select>
	
	<update id="replyCntUpdate">
		update spring_board set r_cnt = r_cnt + #{amount} where b_num = #{b_num}
	</update>
</mapper>